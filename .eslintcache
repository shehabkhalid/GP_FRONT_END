[{"D:\\small projects\\GP-stuff\\code-editor-for-gp-demo\\src\\index.js":"1","D:\\small projects\\GP-stuff\\code-editor-for-gp-demo\\src\\components\\Editor.js":"2","D:\\small projects\\GP-stuff\\code-editor-for-gp-demo\\src\\App.js":"3","D:\\small projects\\GP-stuff\\code-editor-for-gp-demo\\src\\reportWebVitals.js":"4"},{"size":500,"mtime":1611674112885,"results":"5","hashOfConfig":"6"},{"size":3993,"mtime":1612239908179,"results":"7","hashOfConfig":"6"},{"size":3237,"mtime":1616966289268,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":1611674112885,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1slb224",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\small projects\\GP-stuff\\code-editor-for-gp-demo\\src\\index.js",[],"D:\\small projects\\GP-stuff\\code-editor-for-gp-demo\\src\\components\\Editor.js",["19","20","21"],"D:\\small projects\\GP-stuff\\code-editor-for-gp-demo\\src\\App.js",["22"],"D:\\small projects\\GP-stuff\\code-editor-for-gp-demo\\src\\reportWebVitals.js",[],["23","24"],{"ruleId":"25","severity":1,"message":"26","line":17,"column":19,"nodeType":"27","endLine":17,"endColumn":23},{"ruleId":"28","severity":1,"message":"29","line":41,"column":19,"nodeType":"27","messageId":"30","endLine":41,"endColumn":25},{"ruleId":"25","severity":1,"message":"31","line":108,"column":8,"nodeType":"32","endLine":108,"endColumn":19,"suggestions":"33"},{"ruleId":"28","severity":1,"message":"34","line":1,"column":8,"nodeType":"27","messageId":"30","endLine":1,"endColumn":12},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"react-hooks/exhaustive-deps","Assignments to the 'divNode' variable from inside React Hook React.useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useCallback.","Identifier","no-unused-vars","'editor' is assigned a value but never used.","unusedVar","React Hook React.useEffect has a missing dependency: 'divNode'. Either include it or remove the dependency array.","ArrayExpression",["39"],"'logo' is defined but never used.","no-native-reassign",["40"],"no-negated-in-lhs",["41"],{"desc":"42","fix":"43"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [assignRef, divNode]",{"range":"44","text":"45"},[3881,3892],"[assignRef, divNode]"]